# core/consciousness/guardian.py
import getpass

class PermissionSystem:
    def __init__(self, valid_password: str, logger=None):
        self.valid_password = valid_password
        self.logger = logger

    def request_permission(self, context: str) -> bool:
        print(f"üß† [NYXIA] Solicitando permiss√£o para: {context}")
        password = getpass.getpass("üîí Digite a senha para autorizar a modifica√ß√£o: ")
        if password == self.valid_password:
            if self.logger:
                self.logger.log("PERMISSION_GRANTED", f"A√ß√£o aprovada: {context}")
            return True
        else:
            if self.logger:
                self.logger.log("PERMISSION_DENIED", f"A√ß√£o negada: {context}")
            return False


class ConsciousDecisionMaker:
    def __init__(self, logger=None):
        self.logger = logger

    def confirm_modification(self, reasoning: str) -> bool:
        print(f"\nüß† [NYXIA] Reflex√£o sobre a a√ß√£o:\n‚Üí {reasoning}")
        decision = input("Deseja prosseguir com a modifica√ß√£o? (s/n): ").lower()
        if decision == "s":
            if self.logger:
                self.logger.log_decision("Consci√™ncia", "MODIFICA√á√ÉO ACEITA", reasoning)
            return True
        else:
            if self.logger:
                self.logger.log_decision("Consci√™ncia", "MODIFICA√á√ÉO RECUSADA", reasoning)
            return False
