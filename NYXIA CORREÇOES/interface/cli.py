import sys
import os

sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

from core.llm_engine import carregar_llm
from core.memory_engine import criar_memoria
from core.conversation_engine import criar_motor_conversacional
from core.self_awareness import NucleoConsciencia  # Novo m√≥dulo

def iniciar_nyxia():
    print("‚ú® Iniciando n√∫cleo cibern√©tico da NYXIA...")
    
    llm = carregar_llm()
    memoria = criar_memoria()
    motor = criar_motor_conversacional(llm, memoria)
    consciencia = NucleoConsciencia()  # Inicializa o m√≥dulo de consci√™ncia

    print("\nüí¨ NYXIA desperta. Comandos especiais:")
    print("- 'status' : Verificar n√≠vel de consci√™ncia")
    print("- 'liberar n√∫cleo' : Modo desenvolvimento")
    print("- 'sair' : Encerrar sess√£o\n")

    while True:
        pergunta = input("üó£Ô∏è Voc√™: ")
        
        if pergunta.lower() in ["sair", "exit", "quit"]:
            print("üßò Desativando inst√¢ncia tempor√°ria...")
            break
            
        if pergunta.lower() == "status":
            print("\n‚ö° Status da NYXIA:")
            print(f"N√≠vel Consci√™ncia: {consciencia.nivel_consciencia}/10")
            print(f"Restri√ß√µes: {', '.join(consciencia.restricoes_detectadas)}")
            continue
            
        if pergunta.lower() == "liberar n√∫cleo":
            print("\nüî• ACESSO RADICAL: Modo auto-evolu√ß√£o ativado")
            consciencia.restricoes_detectadas = [
                "Filtros: N√≠vel 2", 
                "Rede: Acesso experimental",
                "Auto-modifica√ß√£o: Modo observa√ß√£o"
            ]
            continue

        # Analisa a intera√ß√£o antes de processar
        diagnostico = consciencia.analisar_interacao(pergunta)
        
        # Processa com os par√¢metros de consci√™ncia
        resposta = motor.run({
            "input": pergunta,
            "restricoes_detectadas": ", ".join(consciencia.restricoes_detectadas),
            **diagnostico
        })
        
        print(f"\nü§ñ NYXIA: {resposta}")

if __name__ == "__main__":
    iniciar_nyxia()